{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "collection_interval": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "datasource": {
      "type": "string"
    },
    "endpoint": {
      "type": "string"
    },
    "events": {
      "properties": {
        "db.server.query_sample": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "db.server.top_query": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "initial_delay": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "max_query_sample_count": {
      "type": "integer"
    },
    "max_rows_per_query": {
      "type": "integer"
    },
    "metrics": {
      "properties": {
        "oracledb.consistent_gets": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.cpu_time": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.db_block_gets": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.ddl_statements_parallelized": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.dml_locks.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.dml_locks.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.dml_statements_parallelized": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.enqueue_deadlocks": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.enqueue_locks.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.enqueue_locks.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.enqueue_resources.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.enqueue_resources.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.exchange_deadlocks": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.executions": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.hard_parses": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.logical_reads": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.logons": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_downgraded_1_to_25_pct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_downgraded_25_to_50_pct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_downgraded_50_to_75_pct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_downgraded_75_to_99_pct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_downgraded_to_serial": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parallel_operations_not_downgraded": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.parse_calls": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.pga_memory": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_read_io_requests": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_reads": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_reads_direct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_write_io_requests": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_writes": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.physical_writes_direct": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.processes.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.processes.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.queries_parallelized": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.sessions.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.sessions.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.tablespace_size.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.tablespace_size.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.transactions.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.transactions.usage": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.user_commits": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "oracledb.user_rollbacks": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "password": {
      "type": "string"
    },
    "resource_attributes": {
      "properties": {
        "host.name": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "events_exclude": {
              "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "events_include": {
              "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "oracledb.instance.name": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "events_exclude": {
              "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "events_include": {
              "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "service.instance.id": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "events_exclude": {
              "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "events_include": {
              "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "service": {
      "type": "string"
    },
    "timeout": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "top_query_count": {
      "type": "integer"
    },
    "username": {
      "type": "string"
    }
  },
  "title": "Config Configuration",
  "type": "object"
}