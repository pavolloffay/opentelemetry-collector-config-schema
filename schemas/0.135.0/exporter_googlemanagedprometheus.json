{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "metric": {
      "properties": {
        "clientconfig": {
          "properties": {
            "compression": {
              "description": "Compression specifies the compression format for Metrics and Logging gRPC requests. Supported values: gzip.",
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "grpc_pool_size": {
              "description": "GRPCPoolSize sets the size of the connection pool in the GCP client",
              "type": "integer"
            },
            "use_insecure": {
              "description": "Only has effect if Endpoint is not \"\"",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "config": {
          "properties": {
            "add_metric_suffixes": {
              "description": "AddMetricSuffixes controls whether suffixes are added to metric names. Defaults to true.",
              "type": "boolean"
            },
            "extra_metrics_config": {
              "description": "ExtraMetricsConfig configures the target_info and otel_scope_info metrics.",
              "properties": {
                "enable_scope_info": {
                  "description": "Add `otel_scope_info` metric and `scope_name`/`scope_version` attributes to all other metrics. On by default.",
                  "type": "boolean"
                },
                "enable_target_info": {
                  "description": "Add `target_info` metric based on the resource. On by default.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cumulative_normalization": {
          "description": "CumulativeNormalization normalizes cumulative metrics without start times or with explicit reset points by subtracting subsequent points from the initial point. It is enabled by default. Since it caches starting points, it may result in increased memory usage.",
          "type": "boolean"
        },
        "prefix": {
          "description": "Prefix configures the prefix of metrics sent to GoogleManagedPrometheus.  Defaults to prometheus.googleapis.com. Changing this prefix is not recommended, as it may cause metrics to not be queryable with promql in the Cloud Monitoring UI.",
          "type": "string"
        },
        "resource_filters": {
          "items": {
            "properties": {
              "prefix": {
                "description": "Match resource keys by prefix",
                "type": "string"
              },
              "regex": {
                "description": "Match resource keys by regex",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "project": {
      "type": "string"
    },
    "sending_queue": {
      "properties": {
        "batch": {
          "properties": {
            "flush_timeout": {
              "description": "Duration string (e.g., '1s', '5m', '1h')",
              "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
              "type": "string"
            },
            "max_size": {
              "description": "MaxSize defines the configuration for the maximum size of a batch.",
              "type": "integer"
            },
            "min_size": {
              "description": "MinSize defines the configuration for the minimum size of a batch.",
              "type": "integer"
            },
            "sizer": {
              "description": "Sizer determines the type of size measurement used by the batch. If not configured, use the same configuration as the queue. It accepts \"requests\", \"items\", or \"bytes\".",
              "type": "object"
            }
          },
          "type": "object"
        },
        "block_on_overflow": {
          "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enabled indicates whether to not enqueue and batch before exporting.",
          "type": "boolean"
        },
        "num_consumers": {
          "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported: https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
          "type": "integer"
        },
        "queue_size": {
          "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
          "type": "integer"
        },
        "sizer": {
          "description": "Sizer determines the type of size measurement used by this component. It accepts \"requests\", \"items\", or \"bytes\".",
          "type": "object"
        },
        "storage": {
          "description": "StorageID if not empty, enables the persistent storage and uses the component specified as a storage extension for the persistent queue. TODO: This will be changed to Optional when available.",
          "type": "object"
        },
        "wait_for_result": {
          "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "timeoutsettings": {
      "description": "Timeout for all API calls. If not set, defaults to 12 seconds.",
      "properties": {
        "timeout": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "user_agent": {
      "type": "string"
    }
  },
  "type": "object"
}