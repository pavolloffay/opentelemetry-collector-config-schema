{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "allow_native_passwords": {
      "type": "boolean"
    },
    "collection_interval": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "database": {
      "type": "string"
    },
    "dialer": {
      "description": "DialerConfig contains options for connecting to an address.",
      "properties": {
        "timeout": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "endpoint": {
      "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
      "type": "string"
    },
    "initial_delay": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "logsbuilderconfig": {
      "properties": {
        "events": {
          "properties": {
            "db.server.query_sample": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "db.server.top_query": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "resource_attributes": {
          "properties": {
            "mysql.instance.endpoint": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "events_exclude": {
                  "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "events_include": {
                  "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metrics_exclude": {
                  "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metrics_include": {
                  "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "metricsbuilderconfig": {
      "properties": {
        "metrics": {
          "properties": {
            "mysql.buffer_pool.data_pages": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.buffer_pool.limit": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.buffer_pool.operations": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.buffer_pool.page_flushes": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.buffer_pool.pages": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.buffer_pool.usage": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.client.network.io": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.commands": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.connection.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.connection.errors": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.double_writes": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.handlers": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.index.io.wait.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.index.io.wait.time": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.joins": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.locks": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.log_operations": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.max_used_connections": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.mysqlx_connections": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.mysqlx_worker_threads": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.opened_resources": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.operations": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.page_operations": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.page_size": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.prepared_statements": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.query.client.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.query.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.query.slow.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.replica.sql_delay": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.replica.time_behind_source": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.row_locks": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.row_operations": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.sorts": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.statement_event.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.statement_event.wait.time": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.average_row_length": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.io.wait.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.io.wait.time": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.lock_wait.read.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.lock_wait.read.time": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.lock_wait.write.count": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.lock_wait.write.time": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.rows": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table.size": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.table_open_cache": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.threads": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.tmp_resources": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mysql.uptime": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "resource_attributes": {
          "properties": {
            "mysql.instance.endpoint": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "events_exclude": {
                  "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "events_include": {
                  "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metrics_exclude": {
                  "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metrics_include": {
                  "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
                  "items": {
                    "properties": {
                      "regexp": {
                        "type": "string"
                      },
                      "strict": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "password": {
      "type": "string"
    },
    "query_sample_collection": {
      "properties": {
        "max_rows_per_query": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "statement_events": {
      "properties": {
        "digest_text_limit": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "time_limit": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "timeout": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "tls": {
      "properties": {
        "ca_file": {
          "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
          "type": "string"
        },
        "ca_pem": {
          "description": "In memory PEM encoded cert. (optional)",
          "type": "string"
        },
        "cert_file": {
          "description": "Path to the TLS cert to use for TLS required connections. (optional)",
          "type": "string"
        },
        "cert_pem": {
          "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
          "type": "string"
        },
        "cipher_suites": {
          "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "curve_preferences": {
          "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include_system_ca_certs_pool": {
          "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
          "type": "boolean"
        },
        "insecure": {
          "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
          "type": "boolean"
        },
        "insecure_skip_verify": {
          "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
          "type": "boolean"
        },
        "key_file": {
          "description": "Path to the TLS key to use for TLS required connections. (optional)",
          "type": "string"
        },
        "key_pem": {
          "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
          "type": "string"
        },
        "max_version": {
          "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
          "type": "string"
        },
        "min_version": {
          "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
          "type": "string"
        },
        "reload_interval": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        },
        "server_name_override": {
          "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
          "type": "string"
        },
        "tpm": {
          "description": "Trusted platform module configuration",
          "properties": {
            "auth": {
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "owner_auth": {
              "type": "string"
            },
            "path": {
              "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "top_query_collection": {
      "properties": {
        "collection_interval": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        },
        "lookback_time": {
          "type": "integer"
        },
        "max_query_sample_count": {
          "type": "integer"
        },
        "query_plan_cache_size": {
          "type": "integer"
        },
        "query_plan_cache_ttl": {
          "description": "Duration string (e.g., '1s', '5m', '1h')",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
          "type": "string"
        },
        "top_query_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "transport": {
      "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
      "type": "string"
    },
    "username": {
      "type": "string"
    }
  },
  "type": "object"
}