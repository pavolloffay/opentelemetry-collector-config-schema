{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "auth_type": {
      "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
      "type": "string"
    },
    "context": {
      "description": "When using auth_type `kubeConfig`, override the current context.",
      "type": "string"
    },
    "namespaces": {
      "description": "Namespaces limits the namespaces for the observed resources. By default, all namespaces will be observed.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "node": {
      "description": "Node is the node name to limit the discovery of pod, port, and node endpoints. Providing no value (the default) results in discovering endpoints for all available nodes. For example, node name can be set using the downward API inside the collector pod spec as follows: env: - name: K8S_NODE_NAME valueFrom: fieldRef: fieldPath: spec.nodeName Then set this value to ${env:K8S_NODE_NAME} in the configuration.",
      "type": "string"
    },
    "observe_ingresses": {
      "description": "ObserveIngresses determines whether to report observer ingress. `false` by default.",
      "type": "boolean"
    },
    "observe_nodes": {
      "description": "ObserveNodes determines whether to report observer k8s.node endpoints. If `true` and Node is specified it will only discover node endpoints whose `metadata.name` matches the provided node name. If `true` and Node isn't specified, it will discover all available node endpoints. `false` by default.",
      "type": "boolean"
    },
    "observe_pods": {
      "description": "ObservePods determines whether to report observer pod and port endpoints. If `true` and Node is specified it will only discover pod and port endpoints whose `spec.nodeName` matches the provided node name. If `true` and Node isn't specified, it will discover all available pod and port endpoints. `true` by default.",
      "type": "boolean"
    },
    "observe_services": {
      "description": "ObserveServices determines whether to report observer service and port endpoints. `false` by default.",
      "type": "boolean"
    }
  },
  "type": "object"
}