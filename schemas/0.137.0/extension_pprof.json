{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "block_profile_fraction": {
      "description": "Fraction of blocking events that are profiled. A value \u003c= 0 disables profiling. See https://golang.org/pkg/runtime/#SetBlockProfileRate for details.",
      "type": "integer"
    },
    "mutex_profile_fraction": {
      "description": "Fraction of mutex contention events that are profiled. A value \u003c= 0 disables profiling. See https://golang.org/pkg/runtime/#SetMutexProfileFraction for details.",
      "type": "integer"
    },
    "save_to_file": {
      "description": "Optional file name to save the CPU profile to. The profiling starts when the Collector starts and is saved to the file when the Collector is terminated.",
      "type": "string"
    },
    "tcpaddr": {
      "description": "TCPAddr is the address and port in which the pprof will be listening to. Use localhost:\u003cport\u003e to make it available only locally, or \":\u003cport\u003e\" to make it available on all network interfaces.",
      "properties": {
        "dialer": {
          "description": "DialerConfig contains options for connecting to an address.",
          "properties": {
            "timeout": {
              "description": "Duration string (e.g., '1s', '5m', '1h')",
              "pattern": "^[0-9]+(ns|us|Âµs|ms|s|m|h)$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "endpoint": {
          "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}