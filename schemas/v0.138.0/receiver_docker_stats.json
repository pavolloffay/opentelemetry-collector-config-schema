{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "api_version": {
      "description": "Docker client API version.",
      "type": "string"
    },
    "collection_interval": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "container_labels_to_metric_labels": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "A mapping of container label names to MetricDescriptor label keys. The corresponding container label value will become the DataPoint label value for the mapped name.  E.g. `io.kubernetes.container.name: container_spec_name` would result in a MetricDescriptor label called `container_spec_name` whose Metric DataPoints have the value of the `io.kubernetes.container.name` container label.",
      "type": "object"
    },
    "endpoint": {
      "description": "The URL of the docker server. Default is \"unix:///var/run/docker.sock\" on non-Windows and \"npipe:////./pipe/docker_engine\" on Windows",
      "type": "string"
    },
    "env_vars_to_metric_labels": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "A mapping of container environment variable names to MetricDescriptor label keys.  The corresponding env var values become the DataPoint label value. E.g. `APP_VERSION: version` would result MetricDescriptors having a label key called `version` whose DataPoint label values are the value of the `APP_VERSION` environment variable configured for that particular container, if present.",
      "type": "object"
    },
    "excluded_images": {
      "description": "A list of filters whose matching images are to be excluded. Supports literals, globs, and regex.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "initial_delay": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    },
    "metrics": {
      "properties": {
        "container.blockio.io_merged_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_queued_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_service_bytes_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_service_time_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_serviced_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_time_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.io_wait_time_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.blockio.sectors_recursive": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.logical.count": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.shares": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.throttling_data.periods": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.throttling_data.throttled_periods": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.throttling_data.throttled_time": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.usage.kernelmode": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.usage.percpu": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.usage.system": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.usage.total": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.usage.usermode": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.cpu.utilization": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.active_anon": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.active_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.anon": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.cache": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.dirty": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.fails": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.hierarchical_memory_limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.hierarchical_memsw_limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.inactive_anon": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.inactive_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.mapped_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.percent": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.pgfault": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.pgmajfault": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.pgpgin": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.pgpgout": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.rss": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.rss_huge": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_active_anon": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_active_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_cache": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_dirty": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_inactive_anon": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_inactive_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_mapped_file": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_pgfault": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_pgmajfault": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_pgpgin": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_pgpgout": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_rss": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_rss_huge": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_unevictable": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.total_writeback": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.unevictable": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.usage.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.usage.max": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.usage.total": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.memory.writeback": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.rx_bytes": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.rx_dropped": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.rx_errors": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.rx_packets": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.tx_bytes": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.tx_dropped": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.tx_errors": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.network.io.usage.tx_packets": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.pids.count": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.pids.limit": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.restarts": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "container.uptime": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "resource_attributes": {
      "properties": {
        "container.command_line": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.hostname": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.id": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.image.id": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.image.name": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.name": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "container.runtime": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "metrics_exclude": {
              "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "metrics_include": {
              "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
              "items": {
                "properties": {
                  "regexp": {
                    "type": "string"
                  },
                  "strict": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "timeout": {
      "description": "Duration string (e.g., '1s', '5m', '1h')",
      "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$",
      "type": "string"
    }
  },
  "title": "Config Configuration",
  "type": "object"
}